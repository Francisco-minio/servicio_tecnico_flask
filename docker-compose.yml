services:
  web:
    build: .
    ports:
      - "5001:5000"
    volumes:
      - .:/app
      - ./instance:/app/instance
      - ./logs:/app/logs
      - ./flask_session:/app/flask_session
      - ./static:/app/static
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - MYSQL_HOST=db
      - MYSQL_USER=servicio_tecnico
      - MYSQL_PASSWORD=servicio_tecnico_password
      - MYSQL_DATABASE=ordenes_db
      - MYSQL_ROOT_PASSWORD=root_password
      - DATABASE_URL=mysql+pymysql://servicio_tecnico:servicio_tecnico_password@db/ordenes_db
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "python init_db.py &&
             python create_admin.py &&
             python app.py"

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=ordenes_db
      - MYSQL_USER=servicio_tecnico
      - MYSQL_PASSWORD=servicio_tecnico_password
      - MYSQL_ROOT_PASSWORD=root_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

volumes:
  mysql_data: 